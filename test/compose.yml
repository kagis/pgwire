name: pgwire
services:

  deno:
    image: denoland/deno:alpine-2.5.3
    working_dir: /app
    environment: [TEST_FILTER]
    command: >
      deno test
      --allow-net=pg
      --allow-read=/run/postgresql
      --allow-write=/run/postgresql
      --v8-flags=--stack_trace_limit=30
      --filter="$TEST_FILTER"
      test/test_deno.js
    # command: sh -c 'deno test --coverage=/tmp --allow-net --v8-flags=--stack_trace_limit=30 --filter="$TEST_FILTER" test/test_deno.js && deno coverage /tmp'
    volumes:
      - ..:/app:ro
      - usock:/run/postgresql:ro
    depends_on:
      pg:
        condition: service_healthy

  node:
    image: node:18.17.0-alpine
    working_dir: /app
    environment: [TEST_FILTER]
    command: node --test --test-name-pattern=".?$TEST_FILTER" test/test_node.js
    volumes:
      - ..:/app:ro
      - usock:/run/postgresql:ro
    depends_on:
      pg:
        condition: service_healthy

  pg:
    build:
      dockerfile: pg.dockerfile
    volumes:
      - usock:/run/postgresql

volumes:
  usock:
